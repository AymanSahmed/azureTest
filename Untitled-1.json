{
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "Ayman-Demo-V3",
      "metadata": {
        "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "workbookType": {
      "type": "string",
      "defaultValue": "workbook",
      "metadata": {
        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
      }
    },
    "workbookSourceId": {
      "type": "string",
      "defaultValue": "/subscriptions/9758f8b4-a201-41e3-93c0-b5a44dd0e37f/resourceGroups/RG01/providers/Microsoft.OperationalInsights/workspaces/OMS-03",
      "metadata": {
        "description": "The id of resource instance to which the workbook will be associated"
      }
    },
    "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    }
  },
  "resources": [
    {
      "name": "[parameters('workbookId')]",
      "type": "microsoft.insights/workbooks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2022-04-01",
      "dependsOn": [],
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"9b837107-6be8-45b2-9f28-1200f3d4c023\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Computer\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"Event\\r\\n| where EventID == 3077\\r\\n| distinct Computer\\r\\n\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]},{\"id\":\"6c649ed6-179b-4b6b-8602-4cef6d4356d0\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeParam\",\"type\":4,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":2592000000},\"value\":{\"durationMs\":7776000000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Event \\n| summarize CountWithEvent = countif(EventID == 3099), CountWithoutEvent = countif(EventID != 3099) by Computer\\n| where CountWithEvent != 0 \\n| summarize CountWithEvent = dcount(Computer)\",\"size\":1,\"title\":\"Computers with Event 3099\",\"noDataMessage\":\"No Computers found with Event 3099\",\"timeContextFromParameter\":\"TimeParam\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"CountWithEvent\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"Reported Computers\"}]}},\"leftContent\":{\"columnMatch\":\"CountWithEvent\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"}},\"rightContent\":{\"columnMatch\":\"CountWithEvent\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Clock\",\"text\":\"{TimeParam}\"}]}},\"secondaryContent\":{\"columnMatch\":\"CountWithEvent\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"green\",\"text\":\"Computers are recent refreshed\"}]}},\"showBorder\":true,\"sortCriteriaField\":\"CountWithEvent\",\"sortOrderField\":1,\"size\":\"full\"},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"Computer\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"CountWithEvent\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"20\",\"name\":\"Computers with Event 3099\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Event \\n| summarize CountWithEvent = countif(EventID == 3099), CountWithoutEvent = countif(EventID != 3099) by Computer\\n| where CountWithEvent == 0\\n| summarize CountWithEvent = dcount(Computer)\",\"size\":1,\"title\":\"Computers without Event 3099\",\"noDataMessage\":\"No Computers found with Event 3099\",\"timeContextFromParameter\":\"TimeParam\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"CountWithEvent\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"failed\",\"text\":\"Missing Computers\"}]}},\"leftContent\":{\"columnMatch\":\"CountWithEvent\",\"formatter\":12,\"formatOptions\":{\"min\":0,\"palette\":\"red\"}},\"rightContent\":{\"columnMatch\":\"CountWithEvent\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Clock\",\"text\":\"{TimeParam}\"}]}},\"secondaryContent\":{\"columnMatch\":\"CountWithEvent\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"redBright\",\"text\":\"Computers That are not refreshed or missing\"}]}},\"showBorder\":true,\"sortCriteriaField\":\"CountWithEvent\",\"sortOrderField\":1,\"size\":\"full\"},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"Computer\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"CountWithEvent\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"20\",\"name\":\"Computers without Event 3099 \",\"styleSettings\":{\"maxWidth\":\"110\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Event\\r\\n| where (EventID == 3077 or EventID == 3099 or EventID == 3076 or EventID == 3089) and Computer in ({Computer}) and TimeGenerated {TimeParam}\\r\\n| summarize count() by EventID\\r\\n\",\"size\":1,\"title\":\"WDAC Events \",\"timeContextFromParameter\":\"TimeParam\",\"exportToExcelOptions\":\"all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"EventID\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":null,\"text\":\"EventID :{0}\"}]}},\"subtitleContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"coldHot\"}},\"secondaryContent\":{\"columnMatch\":\"EventID\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"3077\",\"representation\":\"redBright\",\"text\":\"Blocked Event\"},{\"operator\":\"==\",\"thresholdValue\":\"3076\",\"representation\":\"orange\",\"text\":\"Audit Event\"},{\"operator\":\"==\",\"thresholdValue\":\"3099\",\"representation\":\"blue\",\"text\":\"Policy Event\"},{\"operator\":\"==\",\"thresholdValue\":\"3089\",\"representation\":\"blueDark\",\"text\":\"App Control event\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":null,\"text\":\"\"}]}},\"showBorder\":true,\"size\":\"auto\"}},\"customWidth\":\"60\",\"name\":\"Events Summary\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let eventda = Event\\r\\n| where EventID == 3099 and Computer in ({Computer}) and TimeGenerated {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| extend PolicyNameBuffer = tostring(parsed.DataItem.EventData.Data[1]['#text']), Options = tostring(parsed.DataItem.EventData.Data[6]['#text'])\\r\\n| where PolicyNameBuffer != \\\"Microsoft Windows Driver Policy\\\";\\r\\neventda\\r\\n| extend hexValue = Options\\r\\n| extend intValue = toint(hexValue)\\r\\n| extend binaryValue = strcat(\\r\\n    iff(binary_and(intValue, 0x80000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x40000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x20000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x10000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x8000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x4000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x2000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x1000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x800000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x400000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x200000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x100000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x80000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x40000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x20000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x10000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x8000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x4000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x2000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x1000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x800) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x400) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x200) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x100) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x80) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x40) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x20) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x10) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x8) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x4) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x2) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x1) > 0, \\\"1\\\", \\\"0\\\")\\r\\n)\\r\\n| project binaryValue , Computer, PolicyNameBuffer ,Options ,TimeGenerated\\r\\n| summarize arg_max(TimeGenerated, *) by Computer ,PolicyNameBuffer\\r\\n\",\"size\":0,\"title\":\"Active Policies\",\"noDataMessage\":\"No Configured Policies Found in Selected Time Frame\",\"exportedParameters\":[{\"parameterType\":1},{\"fieldName\":\"Options\",\"parameterName\":\"OptionsEx\",\"parameterType\":1},{\"fieldName\":\"binaryValue\",\"parameterName\":\"binaryValue\",\"parameterType\":1},{\"fieldName\":\"PolicyNameBuffer\",\"parameterName\":\"PolicyNameBuffer\",\"parameterType\":1},{\"fieldName\":\"Computer\",\"parameterName\":\"ComputerEx\",\"parameterType\":1}],\"exportToExcelOptions\":\"all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"binaryValue\",\"formatter\":1}],\"filter\":true,\"labelSettings\":[{\"columnId\":\"TimeGenerated\",\"label\":\"When it was Changed \"}]}},\"customWidth\":\"60\",\"name\":\"Active Policies\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let binaryValue = \\\"{binaryValue}\\\";\\r\\nlet RbinaryValue = reverse(binaryValue);\\r\\ndatatable (BitAddress: int, PolicyRuleOption: string)\\r\\n[\\r\\n     0, \\\"NotUsed\\\",\\r\\n     1, \\\"NotUsed\\\",\\r\\n     2, \\\"Enabled:UMCI\\\",\\r\\n     3, \\\"Enabled:Boot Menu Protection\\\",\\r\\n     4, \\\"Enabled:Intelligent Security Graph Authorization\\\",\\r\\n     5, \\\"Enabled:Invalidate EAs on Reboot\\\",\\r\\n     6, \\\"NotUsed\\\",\\r\\n     7, \\\"Required:WHQL\\\",\\r\\n     8, \\\"NotUsed\\\",\\r\\n     9, \\\"NotUsed\\\",\\r\\n     10, \\\"Enabled:Allow Supplemental Policies\\\",\\r\\n     11, \\\"Disabled:Runtime FilePath Rule Protection\\\",\\r\\n     13, \\\"Enabled:Revoked Expired As Unsigned\\\",\\r\\n     14, \\\"NotUsed\\\",\\r\\n     15, \\\"NotUsed\\\",\\r\\n     16, \\\"Enabled:Audit Mode (Default)\\\",\\r\\n     17, \\\"Disabled:Flight Signing\\\",\\r\\n     18, \\\"Enabled:Inherit Default Policy\\\",\\r\\n     19, \\\"Enabled:Unsigned System Integrity Policy (Default)\\\",\\r\\n     20, \\\"Enabled:Dynamic Code Security\\\",\\r\\n     21, \\\"Required:EV Signers\\\",\\r\\n     22, \\\"Enabled:Boot Audit on Failure\\\",\\r\\n     23, \\\"Enabled:Advanced Boot Options Menu\\\",\\r\\n     24, \\\"Disabled:Script Enforcement\\\",\\r\\n     25, \\\"Required:Enforce Store Applications\\\",\\r\\n     26, \\\"NotUsed\\\",\\r\\n     27, \\\"Enabled:Managed Installer\\\",\\r\\n     28, \\\"Enabled:Update Policy No Reboot\\\"\\r\\n]\\r\\n| extend Results = iif(substring(RbinaryValue, BitAddress ,1) == \\\"1\\\", \\\"Yes\\\", \\\"No\\\")\\r\\n| where Results == \\\"Yes\\\"\\r\\n\",\"size\":0,\"title\":\"{PolicyNameBuffer} Current Applied Settings , Policy Option:{OptionsEx}\",\"noDataMessage\":\"Please select Policy Options\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"BitAddress\",\"formatter\":2},{\"columnMatch\":\"PolicyRuleOption\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Enabled:Audit Mode (Default)\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Results\",\"formatter\":5},{\"columnMatch\":\"EventID\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"3077\",\"representation\":\"4\",\"text\":\"Blocked\"},{\"operator\":\"==\",\"thresholdValue\":\"3076\",\"representation\":\"2\",\"text\":\"Audit\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"SmileySad\",\"text\":\"{0}{1}\"}]}}],\"filter\":true}},\"customWidth\":\"40\",\"name\":\"Policy Settings\",\"styleSettings\":{\"showBorder\":true}},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"49cc3703-77f8-4d70-871a-9714c32af6d8\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Status\",\"type\":10,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"typeSettings\":{\"additionalResourceOptions\":[],\"showDefault\":false},\"jsonData\":\"[\\r\\n    {\\r\\n        \\\"label\\\": \\\"Modified\\\",\\r\\n        \\\"value\\\": \\\"Modified\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"label\\\": \\\"Not Modified\\\",\\r\\n        \\\"value\\\": \\\"Not Modified\\\"\\r\\n    }\\r\\n\\r\\n]\",\"timeContext\":{\"durationMs\":86400000},\"value\":\"Modified\",\"label\":\"Was the Policy\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"60\",\"name\":\"parameters - 21\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"2ff46c12-3c6c-4a45-aacd-b43fa14f9da8\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"PolicyNameP\",\"label\":\"Select Policy Name \",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"let eventda = Event\\r\\n| where EventID == 3099 and Computer in ({Computer}) and TimeGenerated {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| extend PolicyNameBuffer = tostring(parsed.DataItem.EventData.Data[1]['#text']), Options = tostring(parsed.DataItem.EventData.Data[6]['#text'])\\r\\n| where PolicyNameBuffer != \\\"Microsoft Windows Driver Policy\\\";\\r\\neventda\\r\\n| extend hexValue = Options\\r\\n| extend intValue = toint(hexValue)\\r\\n| extend binaryValue = strcat(\\r\\n    iff(binary_and(intValue, 0x80000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x40000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x20000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x10000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x8000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x4000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x2000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x1000000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x800000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x400000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x200000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x100000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x80000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x40000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x20000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x10000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x8000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x4000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x2000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x1000) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x800) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x400) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x200) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x100) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x80) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x40) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x20) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x10) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x8) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x4) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x2) > 0, \\\"1\\\", \\\"0\\\"),\\r\\n    iff(binary_and(intValue, 0x1) > 0, \\\"1\\\", \\\"0\\\")\\r\\n)\\r\\n| project binaryValue , Computer, PolicyNameBuffer ,Options\\r\\n| distinct PolicyNameBuffer\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":2592000000},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"40\",\"name\":\"parameters - 13\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selected_status = \\\"{Status}\\\";\\r\\nEvent\\r\\n| where EventID == 3099 and Computer in ({Computer}) and TimeGenerated {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| extend PolicyNameBuffer = tostring(parsed.DataItem.EventData.Data[1]['#text']), Options = tostring(parsed.DataItem.EventData.Data[6]['#text'])\\r\\n| where PolicyNameBuffer != \\\"Microsoft Windows Driver Policy\\\"\\r\\n| project Computer, TimeGenerated, PolicyNameBuffer , Options\\r\\n| order by Computer, PolicyNameBuffer, TimeGenerated asc\\r\\n| extend prev_Options = prev(Options)\\r\\n| where prev_Options != \\\"\\\"\\r\\n| extend Options_Changed = iff(Options != prev_Options, 1, 0)\\r\\n| extend Valid_Options = iif(Options == prev_Options ,\\\"Not Modified\\\",\\\"Modified\\\")\\r\\n| where Valid_Options == iif(selected_status == \\\"\\\", \\\"*\\\", selected_status)\\r\\n| project Computer,TimeGenerated ,PolicyNameBuffer,Valid_Options, Options ,prev_Options\\r\\n\",\"size\":0,\"title\":\"Recent Policy Update\",\"timeContextFromParameter\":\"TimeParam\",\"exportFieldName\":\"prev_Options \",\"exportParameterName\":\"prev_Options\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Computer\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"31ch\"}},{\"columnMatch\":\"PolicyNameBuffer\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"22ch\"}},{\"columnMatch\":\"Options\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"16ch\"}},{\"columnMatch\":\"prev_Options\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"16.5714ch\"}},{\"columnMatch\":\"Valid_Options\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Modified\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"green\",\"text\":\"{0}{1}\"}],\"customColumnWidthSetting\":\"17.7143ch\"}}],\"filter\":true,\"sortBy\":[{\"itemKey\":\"TimeGenerated\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"TimeGenerated\",\"sortOrder\":2}]},\"customWidth\":\"60\",\"name\":\"query - 15\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Event\\r\\n| where EventID == 3099 and  Computer in ({Computer}) and TimeGenerated {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| project PolicyNameBuffer = tostring(parsed.DataItem.EventData.Data[1]['#text']), Options = tostring(parsed.DataItem.EventData.Data[6]['#text']), Computer = Computer\\r\\n| where PolicyNameBuffer != \\\"Microsoft Windows Driver Policy\\\" and PolicyNameBuffer in ({PolicyNameP})\\r\\n| project PolicyNameBuffer ,Computer\\r\\n| summarize  UniqueComputer=count_distinct(Computer) by PolicyNameBuffer\\r\\n\\r\\n\",\"size\":0,\"title\":\"Count Computers Per Policy\",\"timeContextFromParameter\":\"TimeParam\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"gridSettings\":{\"filter\":true},\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"PolicyNameBuffer\",\"formatter\":8,\"formatOptions\":{\"palette\":\"green\"}},\"subtitleContent\":{\"columnMatch\":\"Computer\",\"formatter\":16,\"formatOptions\":{\"linkTarget\":\"ArmAction\",\"linkIsContextBlade\":true,\"showIcon\":true}},\"leftContent\":{\"columnMatch\":\"UniqueComputer\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"}},\"rightContent\":{\"columnMatch\":\"UniqueComputer\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Clock\",\"text\":\"{TimeParam}\"}]}},\"showBorder\":true,\"sortCriteriaField\":\"UniqueComputer\",\"sortOrderField\":1,\"size\":\"auto\"},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"PolicyNameBuffer\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"ComputerCount\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"40\",\"name\":\"Count Computers Per Policy\",\"styleSettings\":{\"maxWidth\":\"100\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Event1 = Event\\r\\n| where EventID == 3089 and Computer in ({Computer}) and TimeGenerated {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| project Computer, TimeGenerated, Hash = tostring(parsed.DataItem.EventData.Data[4]['#text']), PublisherName = tostring(parsed.DataItem.EventData.Data[14]['#text']), IssuerName = tostring(parsed.DataItem.EventData.Data[16]['#text']) ,PublisherTBSHash = tostring(parsed.DataItem.EventData.Data[18]['#text']),IssuerTBSHash = tostring(parsed.DataItem.EventData.Data[20]['#text']);\\r\\n\\r\\nlet Event2 = Event\\r\\n| where EventID == 3077 and Computer in ({Computer}) and TimeGenerated  {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| extend FilePath = tostring(parsed.DataItem.EventData.Data[3]['#text'])\\r\\n| extend FileName = tostring(parsed.DataItem.EventData.Data[1]['#text'])\\r\\n| extend ProcessName = tostring(parse_path(FilePath).Filename)\\r\\n| extend FileName = tostring(parse_path(FileName).Filename)\\r\\n| extend TimeGeneratedevent = TimeGenerated \\r\\n| project Computer, TimeGeneratedevent, Hash = tostring(parsed.DataItem.EventData.Data[8]['#text']), FileName = FileName , ProcessName = ProcessName , Policyname = tostring(parsed.DataItem.EventData.Data[18]['#text']), EventID ,FilePath= FilePath;\\r\\n\\r\\nEvent1\\r\\n| join kind=inner (\\r\\n    Event2\\r\\n) on Hash\\r\\n| summarize UniqueEvents=count_distinct(TimeGeneratedevent) by Computer ,ProcessName, FileName,Policyname, PublisherName,IssuerName, EventID ,TimeGeneratedevent,PublisherTBSHash ,IssuerTBSHash,FilePath  \\r\\n| order by TimeGeneratedevent desc\\r\\n\",\"size\":0,\"title\":\"Per Computer Blocked Process\",\"noDataMessage\":\"No Policy Added Based on Selected Time Frame\",\"timeContextFromParameter\":\"TimeParam\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Computer\",\"formatter\":5,\"formatOptions\":{\"aggregation\":\"Unique\"}},{\"columnMatch\":\"ProcessName\",\"formatter\":5},{\"columnMatch\":\"FileName\",\"formatter\":2},{\"columnMatch\":\"Policyname\",\"formatter\":5},{\"columnMatch\":\"PublisherName\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Unknown\",\"representation\":\"2\",\"text\":\"{0}{1}\"},{\"operator\":\"contains\",\"thresholdValue\":\"Microsoft\",\"representation\":\"success\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"info\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"IssuerName\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Unknown\",\"representation\":\"warning\",\"text\":\"{0}{1}\"},{\"operator\":\"contains\",\"thresholdValue\":\"Microsoft\",\"representation\":\"success\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Normal\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"EventID\",\"formatter\":5},{\"columnMatch\":\"TimeGeneratedevent\",\"formatter\":6},{\"columnMatch\":\"FilePath\",\"formatter\":1,\"formatOptions\":{\"customColumnWidthSetting\":\"100.8571ch\"}},{\"columnMatch\":\"UniqueEvents\",\"formatter\":5},{\"columnMatch\":\"PolicyGUID\",\"formatter\":5},{\"columnMatch\":\"Options\",\"formatter\":5},{\"columnMatch\":\"Count Number of Policies\",\"formatter\":1,\"formatOptions\":{\"aggregation\":\"Unique\"}}],\"filter\":true,\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"Computer\",\"Policyname\",\"ProcessName\"],\"expandTopLevel\":false}}},\"customWidth\":\"100\",\"name\":\"Return Applied Policies \",\"styleSettings\":{\"maxWidth\":\"100\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Event1 = Event\\r\\n| where EventID == 3089 and Computer in ({Computer}) and TimeGenerated {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| project Computer, TimeGenerated, Hash = tostring(parsed.DataItem.EventData.Data[4]['#text']), PublisherName = tostring(parsed.DataItem.EventData.Data[14]['#text']), IssuerName = tostring(parsed.DataItem.EventData.Data[16]['#text']);\\r\\n\\r\\nlet Event2 = Event\\r\\n| where EventID == 3077 or EventID == 3076 and Computer in ({Computer}) and TimeGenerated  {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| extend FilePath = tostring(parsed.DataItem.EventData.Data[3]['#text'])\\r\\n| extend FileName = tostring(parsed.DataItem.EventData.Data[1]['#text'])\\r\\n| extend ProcessName = tostring(parse_path(FilePath).Filename)\\r\\n| extend FileName = tostring(parse_path(FileName).Filename)\\r\\n| extend TimeGeneratedevent = TimeGenerated \\r\\n| project Computer, TimeGeneratedevent, Hash = tostring(parsed.DataItem.EventData.Data[8]['#text']), FileName = FileName , ProcessName = ProcessName , Policyname = tostring(parsed.DataItem.EventData.Data[18]['#text']), EventID;\\r\\n\\r\\nEvent1\\r\\n| join kind=inner (\\r\\n    Event2\\r\\n) on Hash\\r\\n//| where  FileName == \\\"unzip.exe\\\" \\r\\n//| summarize count() by FileName ,ProcessName ,Policyname,PublisherName ,EventID\\r\\n| summarize UniqueEvents=count_distinct(TimeGeneratedevent) by FileName ,ProcessName, Policyname, PublisherName, EventID \\r\\n//| summarize UniqueEvents=count_distinct(TimeGeneratedevent) by FileName,ProcessName,  Policyname, PublisherName\",\"size\":0,\"title\":\"Process by File Summary\",\"timeContextFromParameter\":\"TimeParam\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"gridSettings\":{\"filter\":true},\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"ProcessName\",\"formatter\":1},\"subtitleContent\":{\"columnMatch\":\"FileName\"},\"leftContent\":{\"columnMatch\":\"UniqueEvents\",\"formatter\":12,\"formatOptions\":{\"min\":0,\"palette\":\"coldHot\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"rightContent\":{\"columnMatch\":\"PublisherName\",\"formatter\":1},\"secondaryContent\":{\"columnMatch\":\"EventID\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"3077\",\"representation\":\"redBright\",\"text\":\"Blocked\"},{\"operator\":\"==\",\"thresholdValue\":\"3076\",\"representation\":\"orange\",\"text\":\"Audit\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":null,\"text\":\"{0}{1}\"}]}},\"showBorder\":true,\"sortCriteriaField\":\"UniqueEvents\",\"sortOrderField\":2,\"size\":\"auto\"},\"chartSettings\":{\"showLegend\":true}},\"customWidth\":\"100\",\"name\":\"Process by File Summary\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Event1 = Event\\r\\n| where EventID == 3089 and Computer in ({Computer}) and TimeGenerated {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| project Computer, TimeGenerated, Hash = tostring(parsed.DataItem.EventData.Data[4]['#text']), PublisherName = tostring(parsed.DataItem.EventData.Data[14]['#text']), IssuerName = tostring(parsed.DataItem.EventData.Data[16]['#text']) ,PublisherTBSHash = tostring(parsed.DataItem.EventData.Data[18]['#text']),IssuerTBSHash = tostring(parsed.DataItem.EventData.Data[20]['#text']);\\r\\n\\r\\nlet Event2 = Event\\r\\n| where EventID == 3077 or EventID == 3076 and Computer in ({Computer}) and TimeGenerated  {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| extend FilePath = tostring(parsed.DataItem.EventData.Data[3]['#text'])\\r\\n| extend FileName = tostring(parsed.DataItem.EventData.Data[1]['#text'])\\r\\n| extend ProcessName = tostring(parse_path(FilePath).Filename)\\r\\n| extend FileName = tostring(parse_path(FileName).Filename)\\r\\n| extend TimeGeneratedevent = TimeGenerated \\r\\n| project Computer, TimeGeneratedevent, Hash = tostring(parsed.DataItem.EventData.Data[8]['#text']), FileName = FileName , ProcessName = ProcessName , Policyname = tostring(parsed.DataItem.EventData.Data[18]['#text']), EventID;\\r\\n\\r\\nEvent1\\r\\n| join kind=inner (\\r\\n    Event2\\r\\n) on Hash\\r\\n//| summarize make_set(Computer), dcount(FileName), make_set(Policyname), make_set(ProcessName), make_set(PublisherName), make_set(FileName), make_set(IssuerName), make_set(EventID) by Hash\\r\\n| summarize UniqueFiles=count_distinct(FileName) by EventID,ProcessName, FileName, Policyname, PublisherName , PublisherTBSHash ,IssuerTBSHash ,Computer//,TimeGeneratedevent\\r\\n//| summarize make_set(EventID) ,make_set(Computer), make_set(Policyname), make_set(ProcessName), make_set(PublisherName), make_set(FileName), make_set(IssuerName) by FileName\\r\\n//| project EventID , Computer, Policyname, ProcessName, PublisherName, FileName, IssuerName, Hash\",\"size\":0,\"title\":\"Distinct by Hash {TimeParam}\",\"timeContextFromParameter\":\"TimeParam\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"3077\",\"representation\":\"Sev0\",\"text\":\"Blocked\"},{\"operator\":\"==\",\"thresholdValue\":\"3076\",\"representation\":\"Sev2\",\"text\":\"Audit\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Line\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"set_EventID\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"3077\",\"representation\":\"red\",\"text\":\"Blocked\"},{\"operator\":\"==\",\"thresholdValue\":\"3076\",\"representation\":\"orange\",\"text\":\"Audit\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":null,\"text\":\"{0}{1}\"}]}}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"EventID\",\"FileName\"],\"expandTopLevel\":false}}},\"customWidth\":\"100\",\"name\":\"Distinct by Hash \",\"styleSettings\":{\"maxWidth\":\"100\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Event\\r\\n| where EventID == 3076 or EventID == 3077 and Computer  has_any ({Computer}) and TimeGenerated  {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| extend FilePath = tostring(parsed.DataItem.EventData.Data[3]['#text'])\\r\\n| extend ProcessName = tostring(parse_path(FilePath).Filename)\\r\\n| summarize Count = count() by ProcessName \\r\\n\",\"size\":3,\"title\":\"Top 10  Process Name\",\"timeContextFromParameter\":\"TimeParam\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":1},\"subtitleContent\":{\"columnMatch\":\"ProcessName\"},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":8,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":false},\"chartSettings\":{\"yAxis\":[\"Count\"],\"showLegend\":true,\"ySettings\":{\"numberFormatSettings\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}}},\"mapSettings\":{\"locInfo\":\"LatLong\",\"sizeSettings\":\"Count\",\"sizeAggregation\":\"Sum\",\"legendMetric\":\"Count\",\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"type\":\"heatmap\",\"colorAggregation\":\"Sum\",\"nodeColorField\":\"Count\",\"heatmapPalette\":\"greenRed\"}}},\"customWidth\":\"50\",\"name\":\"Top 10  Process Name\",\"styleSettings\":{\"maxWidth\":\"100\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Event\\r\\n| where EventID == 3089 and Computer  has_any ({Computer}) and TimeGenerated  {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n\\r\\n| summarize Count = count() by PublisherName = tostring(parsed.DataItem.EventData.Data[16]['#text'])\\r\\n\\r\\n| top 10 by Count\\r\\n\",\"size\":3,\"title\":\"Top 10 Publisher Name\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"PublisherName\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"yAxis\":[\"Count\"],\"showLegend\":true,\"ySettings\":{\"numberFormatSettings\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}}}},\"customWidth\":\"50\",\"name\":\"top 10 Publisher Name\",\"styleSettings\":{\"maxWidth\":\"100\",\"showBorder\":true}},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"95a79ba0-3f0d-4cf2-9227-8be90ad6d5b0\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"File\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"Event\\r\\n| where EventID == 3077 or EventID == 3076 and Computer in ({Computer}) and TimeGenerated  {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| extend FileName = tostring(parsed.DataItem.EventData.Data[1]['#text'])\\r\\n| extend FileName = tostring(parse_path(FileName).Filename)\\r\\n| distinct(FileName)\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeParam\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"Coreinfo64.exe\"]}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 19\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Event1 = Event\\r\\n| where EventID == 3089 and Computer in ({Computer}) and TimeGenerated {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| project Computer, TimeGenerated, Hash = tostring(parsed.DataItem.EventData.Data[4]['#text']), PublisherName = tostring(parsed.DataItem.EventData.Data[14]['#text']), IssuerName = tostring(parsed.DataItem.EventData.Data[16]['#text']) ,PublisherTBSHash = tostring(parsed.DataItem.EventData.Data[18]['#text']),IssuerTBSHash = tostring(parsed.DataItem.EventData.Data[20]['#text']);\\r\\n\\r\\nlet Event2 = Event\\r\\n| where EventID == 3077 or EventID == 3076 and Computer in ({Computer}) and TimeGenerated  {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| extend FilePath = tostring(parsed.DataItem.EventData.Data[3]['#text'])\\r\\n| extend FileName = tostring(parsed.DataItem.EventData.Data[1]['#text'])\\r\\n| extend ProcessName = tostring(parse_path(FilePath).Filename)\\r\\n| extend FileName = tostring(parse_path(FileName).Filename)\\r\\n| extend TimeGeneratedevent = TimeGenerated \\r\\n| project Computer, TimeGeneratedevent, Hash = tostring(parsed.DataItem.EventData.Data[8]['#text']), FileName = FileName , ProcessName = ProcessName , Policyname = tostring(parsed.DataItem.EventData.Data[18]['#text']), EventID ,FilePath;\\r\\n\\r\\nEvent1\\r\\n| join kind=inner (\\r\\n    Event2\\r\\n) on Hash\\r\\n//|summarize UniqueEvents=count_distinct(TimeGeneratedevent)\\r\\n| where  FileName in ({File}) \\r\\n| summarize UniqueEvents=count_distinct(TimeGeneratedevent) by EventID,FileName , ProcessName , Policyname , Hash  , Computer ,PublisherName ,IssuerName ,PublisherTBSHash,IssuerTBSHash,FilePath\\r\\n\\r\\n//| summarize count() by FileName ,ProcessName ,Policyname,PublisherName ,EventID ,TimeGeneratedevent \\r\\n//| summarize UniqueEvents=count_distinct(TimeGeneratedevent) by FileName ,ProcessName, Policyname, PublisherName, EventID \\r\\n//| summarize UniqueEvents=count_distinct(TimeGeneratedevent) by FileName,ProcessName,  Policyname, PublisherName\",\"size\":0,\"title\":\"File Details\",\"timeContextFromParameter\":\"TimeParam\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 18\",\"styleSettings\":{\"showBorder\":true}},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"6d842f3b-24c9-44d0-bd86-a4d077d43ae6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ProcessName\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"\\r\\nEvent\\r\\n| where EventID == 3077 or EventID == 3076 and Computer in ({Computer}) and TimeGenerated  {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| extend FilePath = tostring(parsed.DataItem.EventData.Data[3]['#text'])\\r\\n| extend ProcessName = tostring(parse_path(FilePath).Filename)\\r\\n| distinct(ProcessName)\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":14400000},\"timeContextFromParameter\":\"TimeParam\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]},{\"id\":\"2b402137-9fce-439d-affa-71f3d914a8b7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"PolicyName\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"Event\\r\\n| where EventID == 3099 and  Computer in ({Computer}) and TimeGenerated {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| project PolicyNameBuffer = tostring(parsed.DataItem.EventData.Data[1]['#text'])\\r\\n| where PolicyNameBuffer != \\\"Microsoft Windows Driver Policy\\\"\\r\\n| project PolicyNameBuffer \\r\\n| distinct(PolicyNameBuffer)\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":14400000},\"timeContextFromParameter\":\"TimeParam\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"0dcbba7b-e956-4acd-b202-b262b510bf63\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"PublisherName\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\" Event\\r\\n| where EventID == 3089 and Computer in ({Computer}) and TimeGenerated {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| project PublisherName = tostring(parsed.DataItem.EventData.Data[14]['#text'])\\r\\n| distinct(PublisherName)\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeParam\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]},{\"id\":\"b2f5471e-028e-4409-b2e1-40783f641bc6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IssuerName\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\" Event\\r\\n| where EventID == 3089 and Computer in ({Computer}) and TimeGenerated {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| project  IssuerName = tostring(parsed.DataItem.EventData.Data[16]['#text'])\\r\\n| distinct(IssuerName)\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"]},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeParam\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]},{\"id\":\"721c35a5-4e6b-4c15-9759-be09fa945d5a\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"FileName\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"Event\\r\\n| where EventID == 3077 or EventID == 3076 and Computer in ({Computer}) and TimeGenerated  {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| extend FileName = tostring(parsed.DataItem.EventData.Data[1]['#text'])\\r\\n| extend FileName = tostring(parse_path(FileName).Filename)\\r\\n| distinct(FileName)\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"]},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeParam\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"formVertical\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"10\",\"name\":\"parameters - 20\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Event1 = Event\\r\\n| where EventID == 3089 and Computer in ({Computer}) and TimeGenerated {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| project Computer, TimeGenerated, Hash = tostring(parsed.DataItem.EventData.Data[4]['#text']), PublisherName = tostring(parsed.DataItem.EventData.Data[14]['#text']), IssuerName = tostring(parsed.DataItem.EventData.Data[16]['#text']);\\r\\n\\r\\nlet Event2 = Event\\r\\n| where EventID == 3077 or EventID == 3076 and Computer in ({Computer}) and TimeGenerated  {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| extend FilePath = tostring(parsed.DataItem.EventData.Data[3]['#text'])\\r\\n| extend FileName = tostring(parsed.DataItem.EventData.Data[1]['#text'])\\r\\n| extend ProcessName = tostring(parse_path(FilePath).Filename)\\r\\n| extend FileName = tostring(parse_path(FileName).Filename)\\r\\n| extend TimeGeneratedevent = TimeGenerated \\r\\n\\r\\n| project Computer, TimeGeneratedevent, Hash = tostring(parsed.DataItem.EventData.Data[8]['#text']), FileName = FileName , ProcessName = ProcessName , Policyname = tostring(parsed.DataItem.EventData.Data[18]['#text']), EventID;\\r\\n\\r\\nEvent1\\r\\n| join kind=inner (\\r\\n    Event2\\r\\n) on Hash\\r\\n\\r\\n| where  ProcessName in ({ProcessName})\\r\\n| where  Policyname in ({PolicyName})\\r\\n| where  PublisherName in ({PublisherName})\\r\\n| where  IssuerName in ({IssuerName})\\r\\n| where  FileName in ({FileName})\\r\\n| summarize UniqueEvents=count_distinct(TimeGeneratedevent) by ProcessName, FileName, Policyname, PublisherName, IssuerName,EventID ,Computer\\r\\n\",\"size\":3,\"title\":\"Process Map\",\"timeContextFromParameter\":\"TimeParam\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"graph\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ChangeTrend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"pink\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":19,\"formatOptions\":{\"palette\":\"turquoise\",\"timelineSettings\":{\"timelineStartColumn\":\"PolicyNameBuffer\"},\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]}}}]},\"graphSettings\":{\"type\":2,\"topContent\":{\"columnMatch\":\"ProcessName\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"PublisherName\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Unknown\",\"representation\":\"warning\",\"text\":\"\"},{\"operator\":\"contains\",\"thresholdValue\":\"Microsoft\",\"representation\":\"success\",\"text\":\"\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Normal\",\"text\":\"\"}]}},\"centerContent\":{\"columnMatch\":\"UniqueEvents\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"}},\"rightContent\":{\"columnMatch\":\"Policyname\",\"formatter\":1},\"bottomContent\":{\"columnMatch\":\"FileName\",\"formatter\":1},\"hivesContent\":{\"columnMatch\":\"Computer\",\"formatter\":1},\"nodeIdField\":\"ProcessName\",\"sourceIdField\":\"ProcessName\",\"targetIdField\":\"FileName\",\"graphOrientation\":1,\"showOrientationToggles\":true,\"edgeSize\":\"PublisherName\",\"edgeLabel\":\"FileName\",\"nodeSize\":{\"sizeField\":\"ProcessName\",\"minSize\":5,\"maxSize\":200},\"staticNodeSize\":80,\"colorSettings\":{\"nodeColorField\":\"EventID\",\"type\":3,\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"3077\",\"representation\":\"redBright\"},{\"operator\":\"==\",\"thresholdValue\":\"3076\",\"representation\":\"yellow\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"lightBlue\"}]},\"groupByField\":\"Computer\",\"hivesMargin\":5,\"edgeColorSettings\":null},\"mapSettings\":{\"locInfo\":\"LatLong\"}},\"customWidth\":\"80\",\"name\":\"Process Map\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Event validation Section\",\"expandable\":true,\"expanded\":true,\"loadType\":\"always\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"4cc47628-f343-4cb8-a0fe-4c9974f46560\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Hash\",\"type\":2,\"query\":\"Event \\r\\n| where EventID == 3089 and Computer  has_any ({Computer}) and TimeGenerated  {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| project Computer, TimeGenerated, Hash = tostring(parsed.DataItem.EventData.Data[4]['#text']), PublisherName = tostring(parsed.DataItem.EventData.Data[14]['#text']), IssuerName = tostring(parsed.DataItem.EventData.Data[16]['#text']) ,PublisherTBSHash = tostring(parsed.DataItem.EventData.Data[18]['#text']),IssuerTBSHash = tostring(parsed.DataItem.EventData.Data[20]['#text'])\\r\\n| distinct Hash\\r\\n\",\"typeSettings\":{\"additionalResourceOptions\":[]},\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeParam\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":null}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Event \\r\\n| where EventID == 3089 and Computer  has_any ({Computer}) and TimeGenerated  {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| project Computer, TimeGenerated, Hash = tostring(parsed.DataItem.EventData.Data[4]['#text']), PublisherName = tostring(parsed.DataItem.EventData.Data[14]['#text']), IssuerName = tostring(parsed.DataItem.EventData.Data[16]['#text']) ,PublisherTBSHash = tostring(parsed.DataItem.EventData.Data[18]['#text']),IssuerTBSHash = tostring(parsed.DataItem.EventData.Data[20]['#text'])\\r\\n| where Hash = {hash}\\r\\n\",\"size\":0,\"timeContextFromParameter\":\"TimeParam\",\"exportFieldName\":\"Hash\",\"exportParameterName\":\"Hash\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Event\\r\\n| where EventID == 3077 or EventID == 3076 and Computer in ({Computer}) and TimeGenerated  {TimeParam}\\r\\n| extend parsed = parse_xml(EventData)\\r\\n| extend FilePath = tostring(parsed.DataItem.EventData.Data[3]['#text'])\\r\\n| extend FileName = tostring(parsed.DataItem.EventData.Data[1]['#text'])\\r\\n| extend ProcessName = tostring(parse_path(FilePath).Filename)\\r\\n| extend FileName = tostring(parse_path(FileName).Filename)\\r\\n| extend TimeGeneratedevent = TimeGenerated \\r\\n| project Computer, TimeGeneratedevent, Hash = tostring(parsed.DataItem.EventData.Data[8]['#text']), FileName = FileName , ProcessName = ProcessName , Policyname = tostring(parsed.DataItem.EventData.Data[18]['#text']), EventID ,FilePath\\r\\n//| where  FileName in ({File}) \\r\\n| Where Hash = {Hash}\",\"size\":0,\"timeContextFromParameter\":\"TimeParam\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 1\"}]},\"name\":\"Testing Group \"}],\"isLocked\":false,\"fallbackResourceIds\":[\"/subscriptions/9758f8b4-a201-41e3-93c0-b5a44dd0e37f/resourceGroups/RG01/providers/Microsoft.OperationalInsights/workspaces/OMS-03\"]}",
        "version": "1.0",
        "sourceId": "[parameters('workbookSourceId')]",
        "category": "[parameters('workbookType')]"
      }
    }
  ],
  "outputs": {
    "workbookId": {
      "type": "string",
      "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
    }
  },
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
}